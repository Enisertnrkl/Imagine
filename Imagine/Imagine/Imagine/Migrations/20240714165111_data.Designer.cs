// <auto-generated />
using Imagine.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Imagine.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240714165111_data")]
    partial class data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Imagine.DataAccess.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Devices and gadgets",
                            Name = "Electronics"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Apparel and fashion items",
                            Name = "Clothing"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Literature and educational materials",
                            Name = "Books"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Items for interior decoration",
                            Name = "Home Decor"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Gear and supplies for sports",
                            Name = "Sports Equipment"
                        });
                });

            modelBuilder.Entity("Imagine.DataAccess.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Description = "High-performance laptop with SSD storage",
                            ImageUrl = "laptop.jpg",
                            Name = "Laptop",
                            Price = 1099.99m,
                            Stock = 10
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            Description = "Latest smartphone model with OLED display",
                            ImageUrl = "phone.jpg",
                            Name = "Smartphone",
                            Price = 899.99m,
                            Stock = 15
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Comfortable running shoes with breathable fabric",
                            ImageUrl = "shoes.jpg",
                            Name = "Running Shoes",
                            Price = 79.99m,
                            Stock = 20
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 3,
                            Description = "Wooden bookshelf with adjustable shelves",
                            ImageUrl = "bookshelf.jpg",
                            Name = "Bookshelf",
                            Price = 149.99m,
                            Stock = 5
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 1,
                            Description = "Mirrorless digital camera with 4K video recording",
                            ImageUrl = "camera.jpg",
                            Name = "Digital Camera",
                            Price = 699.99m,
                            Stock = 8
                        });
                });

            modelBuilder.Entity("Imagine.DataAccess.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "123 Main St, Anytown",
                            Email = "john.doe@example.com",
                            IsAdmin = false,
                            Name = "John Doe",
                            Password = "password123",
                            PhoneNumber = "555-123-4567",
                            UserName = "john_doe"
                        },
                        new
                        {
                            Id = 2,
                            Address = "456 Elm St, Othertown",
                            Email = "jane.smith@example.com",
                            IsAdmin = true,
                            Name = "Jane Smith",
                            Password = "smith456",
                            PhoneNumber = "555-987-6543",
                            UserName = "jane_smith"
                        },
                        new
                        {
                            Id = 3,
                            Address = "789 Oak St, Anothercity",
                            Email = "admin@example.com",
                            IsAdmin = true,
                            Name = "Admin User",
                            Password = "adminPass",
                            PhoneNumber = "555-222-3333",
                            UserName = "admin_user"
                        });
                });

            modelBuilder.Entity("Imagine.DataAccess.Entities.Product", b =>
                {
                    b.HasOne("Imagine.DataAccess.Entities.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });
#pragma warning restore 612, 618
        }
    }
}
